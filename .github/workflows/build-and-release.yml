name: Build and Release

on:
  push:
    tags:
      - 'v*' # Se activará para cualquier tag que comience con 'v'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            asset_name: encriptar-linux
          - os: windows-latest
            asset_name: encriptar-windows.exe
          - os: macos-latest
            asset_name: encriptar-macos

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with PyInstaller
      run: pyinstaller --onefile encriptar.py

    - name: Create ZIP and TAR archives
      run: |
        zip -j encriptar-source.zip encriptar.py requirements.txt
        tar -cvzf encriptar-source.tar.gz encriptar.py requirements.txt

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: |
          dist/*
          encriptar-source.zip
          encriptar-source.tar.gz
        compression-level: 9 # Máxima compresión

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "DATE=$(date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release Encriptar v${{ steps.date.outputs.DATE }}
          draft: false
          prerelease: false

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for asset in encriptar-*/encriptar* encriptar-*/encriptar-source.*; do
            asset_name=$(basename "$asset")
            echo "Uploading $asset_name"
            curl -H "Authorization: token $GITHUB_TOKEN" \
                 -H "Content-Type: application/octet-stream" \
                 --data-binary @"$asset" \
                 "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$asset_name"
          done
